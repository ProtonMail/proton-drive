.pd-transfers {
    position: fixed;
    right: 0;
    bottom: 1rem;
    z-index: 30;
    box-shadow: 0 0 1.5rem 0.3rem rgba(0, 0, 0, 0.16);
    color: var(--color-main-area, $pm-global-grey);
    transition: 0.15s cubic-bezier(0.22, 1, 0.36, 1);

    @include respond-to($breakpoint-small, 'max') {
        left: 0;
        bottom: 0;
    }

    @include respond-to($breakpoint-small, 'min') {
        width: 60%;
        max-width: 43em;
        margin-right: inherit;
    }

    &-heading {
        background: var(--bgcolor-main-area, $pm-global-altgrey);

        @include respond-to($breakpoint-small, 'min') {
            border-radius: $global-border-radius $global-border-radius 0 0;
        }
    }

    &-headingTooltip {
        align-self: stretch;
        justify-content: stretch;
        align-items: stretch;

        &--isDisabled {
            pointer-events: none;
        }
    }

    &-headingButton {
        &:hover,
        &:focus {
            background-color: rgba(white, 0.05);
        }
        &[disabled] {
            opacity: 0.25;
            pointer-events: none;
        }
    }

    &-list {
        max-height: 22em; // 4x listItem
        overflow-y: auto;
        background-color: var(--bgcolor-input, $pm-global-light);
        transition: inherit;

        @include respond-to(640, 'height') {
            max-height: 35vh;
        }
    }

    &--minimized {
        bottom: 0.25rem;
    }

    &--minimized &-list {
        max-height: 0;
        visibility: hidden;
    }

    &-listItem {
        height: 5.5em; // To avoid height blinking on status changing

        &:not(:last-child) {
            @extend .border-bottom;
        }
    }

    &-listItemTypeIcon {
        opacity: 0.5;
    }

    &-listItemStats {
        position: relative; // For controls in hidden state

        @include respond-to($breakpoint-tiny, 'min') {
            width: 16em;
        }
    }

    &-listItemStat {
        width: 6em; // Magic number, based on value 999.99_MB/s
        white-space: nowrap;
        font-variant-numeric: tabular-nums;
    }

    &-listItemTransferStateIndicator {
        @include respond-to($breakpoint-tiny, 'max') {
            margin-left: 1em;
        }
    }

    &-controls {
        position: absolute;
        right: 0;
        opacity: 0;
    }

    &--hasControls:hover &-controls,
    &--hasControls &-controls:focus-within {
        position: static;
        opacity: 1;
    }

    &--hasControls:hover &-listItemTransferStateIndicator,
    &--hasControls &-controls:focus-within + &-listItemTransferStateIndicator {
        display: none;
    }

    &-controls &-controlButton {
        padding: 0.25em;
    }
}
